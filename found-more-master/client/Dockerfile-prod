###########
# BUILDER #
###########

# base image
FROM node:10.4.1-alpine as builder

# set environment variables
ARG PRISMA_API_GATEWAY_URL
ENV PRISMA_API_GATEWAY_URL $PRISMA_API_GATEWAY_URL

ARG WEBSOCKET_ENDPOINT
ENV WEBSOCKET_ENDPOINT $WEBSOCKET_ENDPOINT

# install git
RUN apk update && apk upgrade && \
    apk add --no-cache bash git openssh

ADD ./babel.config.js /usr/src/app/

# copy common files
WORKDIR /usr/src/app/common
COPY ./common /usr/src/app/common
RUN npm install

# set client working directory
WORKDIR /usr/src/app/client

# install client app dependencies
ENV PATH /usr/src/app/client/node_modules/.bin:$PATH
COPY ./client/package.json /usr/src/app/client/package.json
RUN npm install


# create build
COPY ./client /usr/src/app/client
RUN npm run build

# set found working directory
WORKDIR /usr/src/app/found

# install found app dependencies
ENV PATH /usr/src/app/found/node_modules/.bin:$PATH
COPY ./found/package.json /usr/src/app/found/package.json
RUN npm install

# create build
COPY ./found /usr/src/app/found
RUN npm run build

#########
# FINAL #
#########

# base image
FROM nginx:alpine

COPY nginx.conf /etc/nginx/

RUN apk update \
    && apk upgrade \
    && apk add --no-cache bash \
    && adduser -S www-data -u 1000

# update nginx conf
RUN rm -rf /etc/nginx/conf.d
COPY conf/conf.d/production.conf /etc/nginx/conf.d/default.conf

# copy static files
COPY --from=builder /usr/src/app/client/dist /usr/share/nginx/html/client
COPY --from=builder /usr/src/app/found/dist /usr/share/nginx/html/found

# expose port
EXPOSE 80 443

# run nginx
CMD ["nginx"]